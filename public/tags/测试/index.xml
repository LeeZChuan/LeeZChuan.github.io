<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>测试 on 技术之心</title>
    <link>//localhost:1313/tags/%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 测试 on 技术之心</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Aug 2021 14:54:00 -0400</lastBuildDate>
    <atom:link href="//localhost:1313/tags/%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Jest 和 Puppeteer 构建 Web 自动化测试平台</title>
      <link>//localhost:1313/blog/computer-technology/web/tools-web-fee-test-with-jest-puppeteer/</link>
      <pubDate>Sun, 15 Aug 2021 14:54:00 -0400</pubDate>
      <guid>//localhost:1313/blog/computer-technology/web/tools-web-fee-test-with-jest-puppeteer/</guid>
      <description>&lt;p&gt;测试为软件的稳定和完善提供了必要的支持，Web 前端开发领域相比于做单元测试，端到端测试更有意义和价值。谷歌发布的 Puppeteer 工具和脸书发布的 Jest 测试工具为 Web 端到端测试提供了极大的便利，这里记录了如何使用它们构建一个 Web 自动化测试平台。&lt;/p&gt;</description>
    </item>
    <item>
      <title>单元测试工具：Junit</title>
      <link>//localhost:1313/blog/computer-technology/tools/tools-junit/</link>
      <pubDate>Wed, 30 Aug 2017 23:42:00 -0400</pubDate>
      <guid>//localhost:1313/blog/computer-technology/tools/tools-junit/</guid>
      <description>&lt;p&gt;通常一个项目的代码量是比较大的，而且其中逻辑也较为复杂，在开发完成后再进行项目测试其实是比较耗费时间和精力的，因此边开发边测试是个很好的选择，而 JUnit 则为我们提供了这样的便利。&lt;/p&gt;&#xA;&lt;!-- truncate --&gt;&#xA;&lt;h3 id=&#34;junit&#34;&gt;JUnit&lt;/h3&gt;&#xA;&lt;p&gt;JUnit 是一个用来对 Java 代码进行单元测试的框架，是 XUnit （一套基于测试驱动开发的测试框架）的一个子集，类似的还有 PythonUnit、CppUnit。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>架构设计 on 技术之心</title>
    <link>http://localhost:1313/en/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in 架构设计 on 技术之心</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Dec 2023 20:04:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/en/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>架构设计笔记</title>
      <link>http://localhost:1313/en/blog/notes/architecture-design/</link>
      <pubDate>Fri, 01 Dec 2023 20:04:00 -0500</pubDate>
      <guid>http://localhost:1313/en/blog/notes/architecture-design/</guid>
      <description>&lt;p&gt;该文章将目前可能能用到的架构理念，概念统一汇总整理～&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;多态&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;多态：多态的实际含义是:同一操作作用于不同的对象上面，可以产生不同的解释和不同的执行结 果。换句话说，给不同的对象发送同一个消息的时候，这些对象会根据这个消息分别给出不同的反馈。&lt;/li&gt;&#xA;&lt;li&gt;多态背后的思想是将“做什么”和“谁去做以及怎样去做”分离开来，也就是将“不变的事 物”与 “可能改变的事物”分离开来。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;把不变的部分隔离出来，把可变的部分封装起来，这给予了我们 扩展程序的能力&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;使用继承来得到多态效果，是让对象表现出多态性的最常用手段。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;高阶函数实现AOP&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web 前端 on 技术之心</title>
    <link>http://localhost:1313/tags/web-%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in Web 前端 on 技术之心</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 22 Jul 2016 16:35:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/web-%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>块级格式化上下文（BFC）</title>
      <link>http://localhost:1313/blog/computer-technology/web/css/css-bfc/</link>
      <pubDate>Fri, 22 Jul 2016 16:35:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/css/css-bfc/</guid>
      <description>&lt;p&gt;在进行页面布局时，通常有流式布局、定位布局、浮动布局这三种形式。而在布局过程中，各元素之间的影响却是一个很关键的问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-加载 JavaScript</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-js/</link>
      <pubDate>Tue, 24 May 2016 22:49:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-js/</guid>
      <description>&lt;p&gt;页面的动态交互离不开 Javascript，将 js 脚本引入页面时会阻塞页面加载，在某些时候我们则可以选择异步加载 js 脚本。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-文本节点</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-textnode/</link>
      <pubDate>Tue, 24 May 2016 21:50:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-textnode/</guid>
      <description>&lt;p&gt;文本（Text）节点虽然很多时候我们直接用 innerHTML 去赋值替换，但当我们进行一些细微的修改时，了解一下 DOM 操作还是非常有用的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-文档片段</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-fragment/</link>
      <pubDate>Mon, 23 May 2016 13:10:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-fragment/</guid>
      <description>&lt;p&gt;DOM 操作是非常消耗性能的，如果要进行大量的 DOM 操作，我们可以选择在内存中先构建一个文档片段然后一次性插入 DOM 树。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-事件</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-event/</link>
      <pubDate>Mon, 23 May 2016 12:18:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-event/</guid>
      <description>&lt;p&gt;JavaScript 的作用就是让 html 静态页面具备动态效果，而这些基本都是利用 DOM 事件来实现的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-元素节点属性</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-attribute/</link>
      <pubDate>Sat, 21 May 2016 21:00:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-attribute/</guid>
      <description>&lt;p&gt;元素节点上具有很多属性，这些属性我们通常可以很方便的获取，并进行简单的操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSS 清除浮动</title>
      <link>http://localhost:1313/blog/computer-technology/web/css/css-clear-float/</link>
      <pubDate>Sat, 21 May 2016 18:25:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/css/css-clear-float/</guid>
      <description>&lt;p&gt;在浮动布局中，有时候会因为父元素没有设置高度而子元素浮动导致父元素坍塌，我们就需要清除浮动撑起父元素的高度，在这里总结一下常用方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-元素节点几何量</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-rule/</link>
      <pubDate>Thu, 19 May 2016 14:54:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-rule/</guid>
      <description>&lt;p&gt;当我们在查看 HTML 文档时，每个元素节点被解析后，都画成了可视形状。我们可以获取每个元素节点的几何量（宽、高、偏移量）以及页面滚动距离。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-节点集合</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-nodelist/</link>
      <pubDate>Tue, 17 May 2016 22:30:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-nodelist/</guid>
      <description>&lt;p&gt;当从文档树中选取成组的节点或者使用预定义的节点集合时，这些节点都是放在 NodeList 或者一个 HTMLCollecton 之中，而不是一个数组（Array）中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-选取元素节点</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-select/</link>
      <pubDate>Tue, 17 May 2016 22:10:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-select/</guid>
      <description>&lt;p&gt;DOM 操作都是通过对文档树中节点的访问来实现的，如何选取特定的元素节点是关键，进而才能访问该元素节点实现修改、查看、移除、替换等操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM-元素节点</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-elementnode/</link>
      <pubDate>Tue, 17 May 2016 13:19:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-elementnode/</guid>
      <description>&lt;p&gt;可以说，元素节点是 DOM 树中的核心部分，我们进行文档的操作通常都是建立在元素节点上的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>文档对象模型（DOM）</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom/</link>
      <pubDate>Mon, 16 May 2016 14:04:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom/</guid>
      <description>&lt;p&gt;在网页设计中，有一个很重要的角色需要我们了解，DOM 帮助我们对页面元素进行增、删、改等全方位的操作，而且让 JavaScript 在客户端修改 HTML 文档成为一个很简单的事情，可以说 DOM 为我们操作 HTML 文档提供了强大的编程接口。&lt;/p&gt;</description>
    </item>
    <item>
      <title>浏览器对象模型（BOM）</title>
      <link>http://localhost:1313/blog/computer-technology/web/dom/dom-bom/</link>
      <pubDate>Sun, 15 May 2016 12:02:00 +0800</pubDate>
      <guid>http://localhost:1313/blog/computer-technology/web/dom/dom-bom/</guid>
      <description>&lt;p&gt;在网页开发中，我们通常专注于内容的设计，而有些时候我们需要进行不同窗口之间的交互，这时候我们就需要学习如何运用 BOM 中的许多核心对象，及其属性、方法。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

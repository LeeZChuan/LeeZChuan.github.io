<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>项目管理 on 技术之心</title><link>https://leezchuan.github.io/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</link><description>Recent content in 项目管理 on 技术之心</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 22 Apr 2022 22:53:00 +0800</lastBuildDate><atom:link href="https://leezchuan.github.io/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>如何更好的维护开源项目</title><link>https://leezchuan.github.io/blog/computer-technology/tools/tools-maintain-open-source-projects-with-tools/</link><pubDate>Fri, 22 Apr 2022 22:53:00 +0800</pubDate><guid>https://leezchuan.github.io/blog/computer-technology/tools/tools-maintain-open-source-projects-with-tools/</guid><description>&lt;p>一直以来，开源精神被开发者所推崇，开源项目为开发者提供了不用付出除时间以外任何成本就可以学习前沿技术的最佳途径，另一方面，我们应该思考开源为何会成功，在全球开发者参与协作的情况下代码仓库为何能保持整洁、不出现大规模冲突而奔溃，上下游依赖如何管理，这背后有既定的规范进行强约束，也有一系列社区工具来完成复杂而有价值的工作。所以，从参与或者维护开源项目的角度来看，这些&lt;strong>社区公认的最佳实践&lt;/strong>值得我们了解，学习这些东西也能在一定程度上提高我们管理项目的能力。&lt;/p></description></item></channel></rss>